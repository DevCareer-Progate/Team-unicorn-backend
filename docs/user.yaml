paths:
  /api/v1/auth/signup/:                # path of the user from your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: creates a new user
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: sign up     # name of request, can be any name
        description: It enables a user to create an account
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/UserResponse' 
      responses:          # server responses
        201:
          description: An object with user details
  /api/v1/auth/signin/:                # path of the user from your endpoint
    post:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: user login
      produces:
      - application/json
      parameters:         # request parameters
      - in: body          # request body
        name: sign up     # name of request, can be any name
        description: It enables a user to login into their account
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/UserResponse' 
      responses:          # server responses
        201:
          description: An object with user login details
  /api/v1/users/{userId}:                # path of the user from your endpoint
    get:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: It get a singe user
      produces:
      - application/json
      parameters:         # request parameters
      - name: id
      - in: path         # request body
        description: path parameter takes the user id
        required: true
        type: string
      - in: body
        name: get user
        description: It enables to get a user
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/UserResponse' 
      responses:          # server responses
        201:
          description: An object with user details
        401:
          description: Unauthorized user
  /api/users/{userId}:                # path of the user from your endpoint
    delete:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: It delete a singe user
      produces:
      - application/json
      parameters:         # request parameters
      - name: id
      - in: path         # request body
        description: path parameter takes the user id
        required: true
        type: string
      - in: body
        name: get user
        description: It enables to delete a user
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/UserResponse' 
      responses:          # server responses
        201:
          description: An object with user details deleted
        401:
          description: Unauthorized user
  /users/{userId}:                # path of the user from your endpoint
    put:                 # endpoint request type (post request)
      tags:               # Tag property
        - User            # Value of the tag
      summary: It get a singe user and update the user info
      produces:
      - application/json
      parameters:         # request parameters
      - name: id
      - in: path         # request body
        description: path parameter takes the user id
        required: true
        type: string
      - in: body
        name: get user
        description: It enables to update a user
        required: false   # can also be true depending on user preference
        schema:           # Schema definition
          $ref: '#/definitions/UserResponse' 
      responses:          # server responses
        201:
          description: An object with user updated details
        401:
          description: Unauthorized user
definitions:        # Schema defination for request body
  UserResponse:
    type: object
    properties:
      user:
        type: object
        properties:
          firstName:
            type: string
          lastName:
            type: string
          username:
            type: string
          email:
            type: string
          password:
            type: string