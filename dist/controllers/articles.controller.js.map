{"version":3,"sources":["../../src/controllers/articles.controller.js"],"names":["articleController","req","res","body","articleId","title","article","json","message","status","newArticle","Article","save","art","data","createdOn","Date","now","err","findOneAndUpdate","params","id","runValidators","then","_id","findByIdAndRemove","messgae"],"mappings":"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","sourcesContent":["import Article from '../models/articles.model';\r\n\r\nclass articleController {\r\n\r\n    createArticle(req, res) {\r\n        const { articleId, title, article } = req.body;\r\n\r\n        if (!articleId || !title || !article) {\r\n            res.json({ message: 'Please fill the required field appropriately' }).status(400);\r\n        }\r\n\r\n        const newArticle = new Article({\r\n            articleId,\r\n            title,\r\n            article\r\n        })\r\n\r\n        newArticle.save(art => {\r\n            res.json({\r\n                status: 'success',\r\n                data: {\r\n                    message: 'Article successfully posted',\r\n                    articleId: art.articleId,\r\n                    createdOn: Date.now,\r\n                    title: art.title\r\n                }\r\n            })\r\n        })\r\n            .catch(err => {\r\n                res.json({\r\n                    status: 'unsuccessful',\r\n                    message: 'The article can not be posted',\r\n                    err\r\n                })\r\n            })\r\n    }\r\n\r\n    updateArticle(req, res) {\r\n        Article.findOneAndUpdate(req.params.id, req.body, { new: true, runValidators: true })\r\n            .then(art => {\r\n                if (!art) {\r\n                    return res.json({ message: 'There is no Id with specific user' }).status(400);\r\n                }\r\n\r\n                res.json({\r\n                    status: 'success',\r\n                    data: {\r\n                        message: 'Article successfully updated',\r\n                        title: art.title,\r\n                        article: art.article\r\n                    }\r\n                })\r\n                    .catch(err => {\r\n                        res.json({\r\n                            status: 'Failed',\r\n                            data: {\r\n                                message: 'Article can not be updated',\r\n                                err\r\n                            }\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    deleteArticle(req, res) {\r\n        const _id = req.params.id;\r\n        Article.findByIdAndRemove(_id)\r\n            .then(article => {\r\n                if (!article) {\r\n                    return res.json({ message: 'There is no user with the Id' });\r\n                }\r\n                res.json({\r\n                    status: 'success',\r\n                    data: {\r\n                        messgae: 'Article successfully deleted'\r\n                    }\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport default new articleController;"],"file":"articles.controller.js"}