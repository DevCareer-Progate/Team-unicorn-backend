{"version":3,"sources":["../../src/controllers/profile.controller.js"],"names":["dotenv","config","ProfileController","req","res","body","firstName","lastName","isAdmin","country","state","city","address","image","created_on","status","json","message","newProfile","Profile","save","then","profile","jwt","sign","_id","id","process","env","JWT_SECRET","expiresIn","err","token","next","findById","params","select","result","data","request","type","url","headers","host","console","log","error","find","foundObject","findByIdAndUpdate","findOneAndRemove","parmas"],"mappings":"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","sourcesContent":["import Profile from '../models/user.model';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\n\r\n\r\n// Get user profile details\r\n\r\nclass ProfileController {\r\n\r\n    createProfile(req, res) {\r\n        const { firstName, lastName, isAdmin, country, state, city, address, image, created_on } = req.body;\r\n\r\n        if (!firstName || !lastName || !isAdmin || !country || !state || !city || !address || !image || !created_on) {\r\n            return res.status(400).json({ message: 'Please enter all fields' });\r\n        }\r\n\r\n        const newProfile = new Profile({\r\n            firstName,\r\n            lastName,\r\n            isAdmin,\r\n            country,\r\n            state,\r\n            city,\r\n            address,\r\n            image,\r\n            created_on\r\n        });\r\n\r\n        newProfile.save()\r\n            .then(profile => {\r\n                jwt.sign({ _id: profile.id },\r\n                    process.env.JWT_SECRET,\r\n                    { expiresIn: 3600 },\r\n                    (err, token) => {\r\n                        if (err) throw err;\r\n                        res.json({\r\n                            token,\r\n                            id: newProfile.id,\r\n                            firstName: newProfile.firstName,\r\n                            lastName: newProfile.lastName,\r\n                            address: newProfile.address,\r\n                            state: newProfile.state\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n\r\n    getProfile(req, res, next) {\r\n        Profile.findById(req.params.id).select('firstname lastname username email _id').then(\r\n            result => {\r\n                res.status(200).json({\r\n                    status: 200,\r\n                    message: 'success',\r\n                    data: result,\r\n                    request: {\r\n                        type: \"GET\",\r\n                        url: `http://${req.headers.host}/api/v1/auth/profile/:${id}`\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                res.status(400).json({\r\n                    status: 400,\r\n                    message: 'An error ocuur',\r\n                    error: err\r\n                })\r\n            })\r\n        next();\r\n    }\r\n\r\n    getProfiles(req, res, next) {\r\n        Profile.find({})\r\n            .then((err, foundObject) => {\r\n                if (err) return res.json({ status: 400, message: 'There is an error' })\r\n                res.json({\r\n                    status: 200,\r\n                    data: foundObject\r\n                })\r\n            })\r\n            .catch(err => res.json({\r\n                status: 404,\r\n                data: err\r\n            }))\r\n        next();\r\n    }\r\n\r\n    updateProfile(req, res, next) {\r\n        const { firstName, lastName, isAdmin, country, state, city, address, image } = req.body;\r\n        Profile.findById(req.params.id)\r\n            .then(profile => {\r\n                if (!profile) {\r\n                    return res.status(403).json({ status: 403, message: \"User not found!\" });\r\n                }\r\n                else {\r\n                    Profile.findByIdAndUpdate({ _id: req.params.id }, req.body).then(\r\n                        () => {\r\n                            res.status(200).json({\r\n                                status: 200,\r\n                                data: {\r\n                                    '_id': req.params.id,\r\n                                    'firstName': req.body.firstName || profile.firstName,\r\n                                    'lastName': req.body.lastName || profile.lastName,\r\n                                    'country': req.body.country || profile.country,\r\n                                    'state': req.body.state || profile.state,\r\n                                    'city': req.body.city || profile.city,\r\n                                    'address': req.body.address || profile.address,\r\n                                    'image': req.body.image || profile.image,\r\n                                    'created_on': profile.created_on,\r\n                                }\r\n                            });\r\n                        })\r\n                }\r\n            })\r\n            .catch(err => res.status(404).json({\r\n                status: 404,\r\n                message: \"An error occurred\"\r\n            }));\r\n        next();\r\n    };\r\n\r\n    deleteProfile(req, res, next) {\r\n        Profile.findOneAndRemove({ _id: req.parmas.id })\r\n            .then((err) => {\r\n                if (err) return res.json({ status: 400, message: 'No user with the specified Id' });\r\n                res.json({\r\n                    status: 200,\r\n                    message: 'The profile is deleted successfully',\r\n                })\r\n            })\r\n            .catch(err => res.json({\r\n                status: 404,\r\n                message: 'No profile found!',\r\n            }))\r\n        next();\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default new ProfileController();"],"file":"profile.controller.js"}