{"version":3,"sources":["../../src/controllers/git.controller.js"],"names":["dotenv","config","gifController","req","res","body","userId","title","image","status","json","message","newGif","Gif","save","then","gif","data","gifId","createdOn","Date","now","_id","params","id","findOneAndRemove","err"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;;;AADAA,mBAAOC,MAAP;;IAGMC,a;;;;;;;8BACQC,G,EAAKC,G,EAAK;AAAA,sBACiBD,GAAG,CAACE,IADrB;AAAA,UACRC,MADQ,aACRA,MADQ;AAAA,UACAC,KADA,aACAA,KADA;AAAA,UACOC,KADP,aACOA,KADP;;AAGhB,UAAI,CAACF,MAAD,IAAW,CAACC,KAAZ,IAAqB,CAACC,KAA1B,EAAiC;AAC7B,eAAOJ,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB,CAAP;AACH;;AAED,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAQ;AACnBN,QAAAA,KAAK,EAALA,KADmB;AAEnBC,QAAAA,KAAK,EAALA;AAFmB,OAAR,CAAf;AAKAI,MAAAA,MAAM,CAACE,IAAP,GACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACTZ,QAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,UAAAA,MAAM,EAAE,SADH;AAELQ,UAAAA,IAAI,EAAE;AACFC,YAAAA,KAAK,EAAEF,GAAG,CAACV,MADT;AAEFK,YAAAA,OAAO,EAAE,+BAFP;AAGFQ,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAHd;AAIFd,YAAAA,KAAK,EAAES,GAAG,CAACT,KAJT;AAKFC,YAAAA,KAAK,EAAEQ,GAAG,CAACR;AALT;AAFD,SAAT;AAUH,OAZL;AAaH;;;8BAESL,G,EAAKC,G,EAAK;AAChB,UAAMkB,GAAG,GAAGnB,GAAG,CAACoB,MAAJ,CAAWC,EAAvB;;AACAX,sBAAIY,gBAAJ,CAAqBH,GAArB,EACKP,IADL,CACU,UAAAC,GAAG,EAAI;AACT,YAAI,CAACA,GAAL,EAAU;AACN,iBAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAAT,CAAP;AACH;;AAEDP,QAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,UAAAA,MAAM,EAAE,SADH;AAELQ,UAAAA,IAAI,EAAE;AACFN,YAAAA,OAAO,EAAE;AADP;AAFD,SAAT;AAMH,OAZL,WAaW,UAAAe,GAAG,EAAI;AACVtB,QAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,UAAAA,MAAM,EAAE,QADH;AAELQ,UAAAA,IAAI,EAAE;AACFN,YAAAA,OAAO,EAAE,wBADP;AAEFe,YAAAA,GAAG,EAAHA;AAFE;AAFD,SAAT;AAOH,OArBL;AAsBH;;;;;;eAIU,IAAIxB,aAAJ,E","sourcesContent":["import jwt from 'jsonwebtoken';\r\nimport dotenv from 'dotenv';\r\ndotenv.config();\r\nimport Gif from '../models/gif.model';\r\n\r\nclass gifController {\r\n    createGif(req, res) {\r\n        const { userId, title, image } = req.body;\r\n\r\n        if (!userId || !title || !image) {\r\n            return res.status(400).json({ message: 'Please fill the required field' });\r\n        }\r\n\r\n        const newGif = new Gif({\r\n            title,\r\n            image\r\n        });\r\n\r\n        newGif.save()\r\n            .then(gif => {\r\n                res.json({\r\n                    status: 'success',\r\n                    data: {\r\n                        gifId: gif.userId,\r\n                        message: 'GIF image successfully posted',\r\n                        createdOn: Date.now,\r\n                        title: gif.title,\r\n                        image: gif.image,\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n    deleteGif(req, res) {\r\n        const _id = req.params.id;\r\n        Gif.findOneAndRemove(_id)\r\n            .then(gif => {\r\n                if (!gif) {\r\n                    return res.json({ message: 'There is no gif with the Id' });\r\n                }\r\n\r\n                res.json({\r\n                    status: 'success',\r\n                    data: {\r\n                        message: 'gif post successfully deleted'\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                res.json({\r\n                    status: 'Failed',\r\n                    data: {\r\n                        message: 'gif can not be deleted',\r\n                        err\r\n                    }\r\n                })\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport default new gifController();\r\n"],"file":"git.controller.js"}